# 作者: 大数据 浪哥
# 2025年06月12日02时20分46秒
# 1054074422@qq.com
#代码说明：集合的基本操作
# 创建集合
my_set = {1, 2, 3, 4, 5}
print(my_set)

# 集合的基本操作
# 1. 增加元素
my_set.add(6)
print(my_set)

# 2. 删除元素
my_set.remove(2)
print(my_set)

# 3. 集合的交集、并集、差集、对称差运算
set1 = {1, 2, 3, 4}
set2 = {3, 4, 5, 6}
# 交集
print(set1 & set2)

# 并集
print(set1 | set2)

# 差集
print(set1 - set2)

# 对称差运算
print(set1 ^ set2)
# 4. 集合的遍历
for item in my_set:
    print(item)

# 5. 集合的长度
print(len(my_set))

# 5. 集合的元素类型
print(type(my_set))

# 6. 集合的成员测试
print(3 in my_set)
print(7 not in my_set)

# 7. 集合的清空
my_set.clear()
print(my_set)

# 8. 集合的复制
my_set2 = my_set.copy()
print(my_set2)

# 9. 集合的更新
my_set.update({7, 8, 9})
print(my_set)

# 10. 集合的推导式
my_set = {x for x in range(1, 10) if x % 2 == 0}
print(my_set)

# 11. 集合的推导式2
my_set = {x**2 for x in range(1, 10)}
print(my_set)

#什么是集合的推导式？
# 集合的推导式是一种创建集合的简便方式，它使用一系列表达式来创建集合中的元素。
# 集合的推导式的语法格式如下：
# {表达式 for 变量 in 可迭代对象 if 条件}
# 表达式：表示要生成的元素，可以是任意表达式，但只能是单个值。
# 变量：表示可迭代对象中的元素，可以是任意变量名。
# 可迭代对象：表示要遍历的对象，可以是列表、元组、字符串、字典等。
# 条件：表示对可迭代对象中的元素进行过滤的条件，可以是任意表达式，返回值为布尔值。
# 集合的推导式的作用是根据可迭代对象中的元素，根据条件表达式对其进行过滤，并根据表达式生成新的元素，最后生成一个新的集合。
# 集合的推导式的特点：
# 1. 简洁：集合的推导式可以用一行代码生成集合，代码量较少，可读性较高。
# 2. 高效：集合的推导式使用了生成器表达式，可以节省内存，提高运行效率。
# 3. 灵活：集合的推导式可以根据条件表达式对可迭代对象中的元素进行过滤，并根据表达式生成新的元素，可以灵活地创建集合。
